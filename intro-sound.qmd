```{r}
#| echo: false
#| output: false

  # set up the chapter
library(tidyverse)
library(here)
library(ggthemes)
# set up the chapter

 # set up some data
x <- seq(0, 3*pi, 0.1)
y <- sin(x)
z <- 0.75*sin(x)
w <- sin(2*x)
sin_data <- as.data.frame(cbind(x, y, z, w))
```

# An introduction to Sound

## Introduction

To fully understand how we can use bioacoustic recording to measure and monitor biodiversity, we first need to understand some principles about sound and how sound is digitally recorded.

## Some Definitions

Three terms we need to familiarize ourselves with stem from the work of soundscape ecologists [@villanueva-rivera2011] , and can be defined as follows:

1.  **Biophony** = Sounds generated by living organisms and/or their activity. Examples include bird song, beaver tail slaps, woodpecker foraging.

2.  **Anthrophony** = sounds generated by human activity. Examples include traffic noise, sirens, fireworks, gunfire etc.

3.  **Geophony** = sounds generated by non-living earth features. Examples include wind, streamflow, and thunder.

To collect sounds and classify them into one of these three categories, or to further classify them within any category, we need to be able to record them.

## Sound and digital recording of sound

### Some properties of sounds: Amplitude and Frequency

Sound is propagated as a wave through a medium (air, water). When a simple sound is emitted as a pure tone, it can be depicted as a sine wave. In @fig-simple-sound-wave, we see one and a half wavelengths of a simple sound wave. The height of the wave is its *amplitude* and determines how *loud* the sound is. The width of one wave is the *wavelength*. Low-pitched sounds have longer wavelengths than do higher pitched sounds.

```{r}
#| echo: false 
#| label: fig-simple-sound-wave
#| fig-cap: Example of a sound wave 

ggplot(sin_data, aes(x, y)) + 
  geom_line() + 
  annotate("segment", x = 3.5, xend = 3.5, y = 0, yend = 1, 
               color = "red",
               arrow = arrow(length = unit(0.25, "cm"), ends = "both")) +
  annotate("text", x = 4.25, y = 0.5, label = "Amplitude") +
  annotate("segment", x = 0, xend = 6.2, y = -0.05, yend = -0.05,
               color = "blue",
               arrow = arrow(length = unit(0.25, "cm"), ends = "both")) +
  annotate("text", x = 0.85, y = -0.15, label = "Wavelength") + 
  labs(x = "Time", y = expression( paste( "Force (N/", m^2, ")")))+
  scale_x_continuous(breaks = seq(0, 10, by = 2))+
  scale_color_colorblind() 

```

In @fig-louder-softer-waves, you can see two sound waves depicted, one in black and the other in blue.

::: {.callout-tip collapse="true"}
## Which of the two waves in the figure below has higher volume? Check for answer

The black wave is louder than the blue wave because it has a higher **amplitude**
:::

```{r}
#| echo: false
#| label: fig-louder-softer-waves
#| fig-cap: Example of two waves with the same wavelength but different amplitude. 
ggplot(sin_data, aes(x, y))+
  geom_line()+
  geom_line(data = sin_data, aes(x, z), color = "blue")+
  labs(x = "Time",
       y = expression(
        paste(
          "Force (N/", m^2, ")")),
       color = "Wave") +
  labs(x = "Time", y = expression( paste( "Force (N/", m^2, ")")))+
  scale_x_continuous(breaks = seq(0, 10, by = 2))+
  scale_color_colorblind() 



```

The pitch (in music think of the note - high or low sounding) of a sound is determined by its **frequency**, the number of waves emitted per unit of time (typically seconds). Long waves are slower to propagate and thus have lower frequencies than do short sound waves. In other words, high-pitched sounds have a **high** **frequency** and low-pitched sounds have **low frequency**.

In @fig-shorter-longer-waves, we again see two sound waves. One is higher in pitch than the other.

::: {.callout-tip collapse="true"}
## Which of the two waves in the figure below has higher pitch? Check for answer

The blue wave is higher pitched than the black wave because it has a higher **frequency**
:::

```{r}
#| echo: false
#| label: fig-shorter-longer-waves
#| fig-cap: Example of two waves with the same amplitude but different frequencies. 
ggplot(sin_data, aes(x, y))+
  geom_line()+
  geom_line(data = sin_data, aes(x, w), color = "blue")+
  labs(x = "Time",
       y = expression(
        paste(
          "Force (N/", m^2, ")")),
       color = "Wave") +
  labs(x = "Time", y = expression( paste( "Force (N/", m^2, ")")))+
  scale_x_continuous(breaks = seq(0, 10, by = 2))+
  scale_color_colorblind() 

```

Typically, we describe the frequency of a sound in cycles per second or Hertz.
